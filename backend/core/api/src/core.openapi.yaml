openapi: 3.0.1
info:
  title: FA server API
  description: 'FA server API'
  version: 1.0.0
servers:
  - url: '{URL}'

paths:
  /api/visitor:
    get:
      summary: Save visitor
      parameters:
        - in: query
          name: utm_source
          schema:
            type: string
          required: false
          description: UTM source
        - in: query
          name: initialReferrer
          schema:
            type: string
          required: false
          description: Initial referrer
      responses:
        200:
          description: Success
      security:
        - PublicAuth: [ ]
      operationId: saveVisitor
      tags: [ visitor ]

  /api/authorize:
    post:
      summary: Authorize using email password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeResponse'
      security:
        - PublicAuth: [ ]
      operationId: authorize
      tags: [ auth ]

  /api/oauth-authorization-links:
    get:
      summary: Authorization oauth links
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationLinksResponse'
      security:
        - PublicAuth: [ ]
      operationId: authorizationLinks
      tags: [ auth ]

  /api/authorize-oauth:
    post:
      summary: Authorize via oauth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeOauthRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeResponse'
      security:
        - PublicAuth: [ ]
      operationId: authorizeOauth
      tags: [ auth ]

  /api/registration/start:
    post:
      summary: Start registration with email password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
      security:
        - PublicAuth: [ ]
      operationId: startRegistration
      tags: [ registration ]

  /api/register/confirm:
    post:
      summary: Confirm registration with email password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitRegistrationRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeResponse'
      security:
        - PublicAuth: [ ]
      operationId: confirmRegistration
      tags: [ registration ]

  /api/user:
    put:
      summary: Update user information
      requestBody:
        description: Updated user data
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateRequest"
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: updateUser
      tags: [ user ]
    delete:
      summary: Delete user
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: deleteUser
      tags: [ user ]

  /api/user/change-email:
    post:
      summary: Change email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeEmailResponse'
      security:
        - TokenAuth: [ ]
      operationId: changeEmail
      tags: [ user ]

  /api/user/change-email-confirmation:
    post:
      summary: Confirm change email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailConfirmationRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - PublicAuth: [ ]
      operationId: confirmChangeEmail
      tags: [ user ]

  /api/user/check-email-uniqueness/{email}:
    get:
      summary: Check email uniqueness
      parameters:
        - in: path
          name: email
          schema:
            type: string
          required: true
          description: Return true if such e-mail already exists
      responses:
        200:
          description: Success
          content:
            'application/json':
              schema:
                type: boolean
      security:
        - PublicAuth: [ ]
      operationId: existsByEmail
      tags: [ user ]

  /api/user/check-username-uniqueness/{username}:
    get:
      summary: Check email uniqueness
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: Return true if such username already exists
      responses:
        200:
          description: Success
          content:
            'application/json':
              schema:
                type: boolean
      security:
        - PublicAuth: [ ]
      operationId: existsByUsername
      tags: [ user ]

  /api/user/request-password-reset:
    post:
      summary: Request password reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPasswordResetRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - PublicAuth: [ ]
      operationId: requestPasswordReset
      tags: [ user ]

  /api/user/reset-password:
    post:
      summary: Reset password with reset id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeResponse'
      security:
        - PublicAuth: [ ]
      operationId: resetPassword
      tags: [ user ]

  /api/user/change-password:
    post:
      summary: Change password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: changePassword
      tags: [ user ]

  /api/user/set-password:
    post:
      summary: Set password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: setPassword
      tags: [ user ]

  /api/user/get-me:
    get:
      summary: Get user information
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMeResponse'
      security:
        - TokenAuth: [ ]
      operationId: getMe
      tags: [ user ]

  /api/user/get-user-info/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
    get:
      summary: Get other user information
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
      security:
        - PublicAuth: [ ]
      operationId: getUserInfo
      tags: [ user ]


  /api/user/get-user-info-by-user-name/{username}:
    parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
    get:
      summary: Get other user information by username
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
      security:
        - PublicAuth: [ ]
      operationId: getUserInfoByUsername
      tags: [ user ]

  /api/user/get-uncorfirmed-full-name-by-email/{email}:
    parameters:
      - in: path
        name: email
        schema:
          type: string
        required: true
    get:
      summary: Get uncorfirmed user full name by email
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullName'
      security:
        - PublicAuth: [ ]
      operationId: getUncorfirmedUserFullName
      tags: [ user ]

  /api/publication:
    post:
      summary: Create publication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePublicationRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePublicationResponse'
      security:
        - TokenAuth: [ ]
      operationId: createPublication
      tags: [ publication ]

  /api/user/publications:
    get:
      summary: Get user publications
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
          description: Page number
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
          description: Page size
        - in: query
          name: statuses
          schema:
            items:
              $ref: '#/components/schemas/PublicationStatus'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationsResponse'
      security:
        - TokenAuth: [ ]
      operationId: getMyPublications
      tags: [ publication ]

  /api/user-publications/{username}:
    get:
      summary: Get user publications by username
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: Username
        - in: query
          name: page
          schema:
            type: integer
          required: true
          description: Page number
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
          description: Page size
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationsResponse'
      security:
        - PublicAuth: [ ]
      operationId: getUserPublications
      tags: [ publication ]

  /api/publications:
    get:
      summary: Get all publications
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
          description: Page number
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
          description: Page size
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationsResponse'
      security:
        - PublicAuth: [ ]
      operationId: getAllPublications
      tags: [ publication ]

  /api/publications/featured:
    get:
      summary: Get all featured publications
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
          description: Page number
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
          description: Page size
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationsResponse'
      security:
        - PublicAuth: [ ]
      operationId: getAllFeaturedPublications
      tags: [ publication ]

  /api/public/publication/{id}:
    get:
      summary: Get publication
      parameters:
        - in: path
          name: id
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
      security:
        - PublicAuth: [ ]
      operationId: getPublicationPublic
      tags: [ publication ]

  /api/public/files:
    parameters:
      - in: query
        name: publicationId
        schema:
          type: string
          maxLength: 7
        required: true
        description: Publication id
    get:
      summary: Get files by publication id
      parameters:
        - in: query
          name: dirPath
          schema:
            type: string
          required: true
          description: Directory path
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PublicationFile'
      security:
        - PublicAuth: [ ]
      operationId: getPublicationFilesPublic
      tags: [ file ]

  /api/public/sample-files:
    parameters:
      - in: query
        name: publicationId
        schema:
          type: string
          maxLength: 7
        required: true
        description: Publication id
    get:
      summary: Get sample files by publication id
      parameters:
        - in: query
          name: dirPath
          schema:
            type: string
          required: true
          description: Directory path
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PublicationFile'
      security:
        - PublicAuth: [ ]
      operationId: getPublicationSampleFilesPublic
      tags: [ sampleFile ]

  /api/publication/{id}:
    get:
      summary: Get publication
      parameters:
        - in: path
          name: id
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
      security:
        - TokenAuth: [ ]
      operationId: getPublication
      tags: [ publication ]
    delete:
      summary: Delete draft publication
      parameters:
        - in: path
          name: id
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: delete
      tags: [ publication ]
    patch:
      summary: Edit publication
      parameters:
        - in: path
          name: id
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicationEditRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: editPublication
      tags: [ publication ]

  /api/publication/{id}/status:
    get:
      summary: Get publication status
      parameters:
        - in: path
          name: id
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationStatus'
      security:
        - TokenAuth: [ ]
      operationId: getPublicationStatus
      tags: [ publication ]

  /api/publication/downloaders/{id}:
    get:
      summary: Get publication
      parameters:
        - in: path
          name: id
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
        - in: query
          name: page
          schema:
            type: integer
          required: true
          description: Page number
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
          description: Page size
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDownloadersResponse'
      security:
        - PublicAuth: [ ]
      operationId: getPublicationDownloaders
      tags: [ publication ]

  /api/publication/search:
    get:
      summary: Search publications
      parameters:
        - in: query
          name: text
          schema:
            type: string
          required: true
          description: Entry
        - in: query
          name: limit
          schema:
            type: integer
            maximum: 100
        - in: query
          name: pageNum
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchPublicationsResponse'
      security:
        - PublicAuth: [ ]
      operationId: searchPublications
      tags: [ publication ]

  /api/publication/{id}/submit:
    put:
      summary: Submit publication
      parameters:
        - in: path
          name: id
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitPublicationRequest'
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: submitPublication
      tags: [ publication ]

  /api/publication/{id}/request-download:
    put:
      summary: Request publication archive download
      parameters:
        - in: path
          name: id
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: requestDownload
      tags: [ publication ]

  /api/publication/{id}/view/increment:
    post:
      summary: Update publication view count
      parameters:
        - in: path
          name: id
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
      responses:
        200:
          description: Success
      security:
        - PublicAuth: [ ]
      operationId: incrementPublicationViewCount
      tags: [ publication ]

  /api/publication/{id}/download-link:
    get:
      summary: Get publication content download link
      parameters:
        - in: path
          name: id
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadLinkResponse'
      security:
        - TokenAuth: [ ]
      operationId: getDownloadLink
      tags: [ publication ]

  /api/publication/{id}/pdf/download:
    get:
      parameters:
        - in: path
          name: id
          schema:
            type: string
            maxLength: 7
          required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
      security:
        - PublicAuth: [ ]
      operationId: downloadPdf
      tags: [ publication ]

  /api/pending-publication/{id}/pdf/download:
    get:
      parameters:
        - in: path
          name: id
          schema:
            type: string
            maxLength: 7
          required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
      security:
        - TokenAuth: [ ]
      operationId: downloadPendingPdf
      tags: [ publication ]

  /api/publication/{id}/files/sample/download-link:
    parameters:
      - in: path
        name: id
        schema:
          type: string
          maxLength: 7
        required: true
    get:
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadLinkResponse'
      security:
        - PublicAuth: [ ]
      operationId: getPublicationSampleFilesDownloadLink
      tags: [ publication ]

  /api/moderation/publication/{id}/block:
    put:
      summary: Block publication
      parameters:
        - in: path
          name: id
          schema:
            type: string
            minLength: 7
            maxLength: 7
          required: true
          description: Publication id
      responses:
        200:
          description: Success
      security:
        - BasicAuth: [ ]
      operationId: moderationBlockPublication
      tags: [ moderation ]

  /api/moderation/publication/{id}/publish:
    put:
      summary: Change publication status from MODERATION to PUBLISHED
      parameters:
        - in: path
          name: id
          schema:
            type: string
            minLength: 7
            maxLength: 7
          required: true
          description: Publication id
      responses:
        200:
          description: Success
      security:
        - BasicAuth: [ ]
      operationId: moderationPublishPublication
      tags: [ moderation ]

  /api/moderation/publication/{id}/pdf:
    get:
      summary: Download pdf file
      parameters:
        - in: path
          name: id
          schema:
            type: string
            minLength: 7
            maxLength: 7
          required: true
          description: Publication id
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
      security:
        - BasicAuth: [ ]
      operationId: moderationDownloadPdf
      tags: [ moderation ]

  /api/files/check-duplicates/{publicationId}:
    post:
      summary: Check file duplicates
      parameters:
        - in: path
          name: publicationId
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckFileDuplicatesRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckFileDuplicatesResponse'
      security:
        - TokenAuth: [ ]
      operationId: checkFileDuplicates
      tags: [ file ]

  /api/report/files/upload:
    post:
      summary: Upload file
      parameters:
        - in: query
          name: contentLength
          schema:
            type: integer
            format: int64
          required: false
          description: Content length
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportFile'
      security:
        - PublicAuth: [ ]
      operationId: uploadReportFile
      tags: [ report ]

  /api/publication/{publicationId}/academic-supervisor-letters:
    post:
      summary: Upload academic supervisor letter
      parameters:
        - in: path
          name: publicationId
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                academicSupervisorName:
                  type: string
                  maxLength: 255
                file:
                  type: string
                  format: binary
            encoding:
              file:
                contentType: application/octet-stream
                x-maxSize: 10MB
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademicSupervisorLetter'
      security:
        - TokenAuth: [ ]
      operationId: uploadAcademicSupervisorLetter
      tags: [ academic-supervisor-letter ]
    get:
      summary: Upload academic supervisor letter
      parameters:
        - in: path
          name: publicationId
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AcademicSupervisorLetter'
      security:
        - TokenAuth: [ ]
      operationId: getAcademicSupervisorLetters
      tags: [ academic-supervisor-letter ]

  /api/publication/{publicationId}/academic-supervisor-letters/{letterId}:
    get:
      summary: Get download link for academic supervisor letter
      parameters:
        - in: path
          name: publicationId
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
        - in: path
          name: letterId
          schema:
            type: string
            format: uuid
          required: true
          description: Academic supervisor letter id
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                type: string
      security:
        - TokenAuth: [ ]
      operationId: downloadAcademicSupervisorLetter
      tags: [ academic-supervisor-letter ]
    delete:
      summary: Delete academic supervisor letter
      parameters:
        - in: path
          name: publicationId
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
        - in: path
          name: letterId
          schema:
            type: string
            format: uuid
          required: true
          description: Academic supervisor letter id
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: deleteAcademicSupervisorLetter
      tags: [ academic-supervisor-letter ]

  /api/report/create:
    post:
      summary: Create report
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReportRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - PublicAuth: [ ]
      operationId: createReport
      tags: [ report ]

  /api/files/upload:
    post:
      summary: Upload file
      parameters:
        - in: query
          name: publicationId
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
        - in: query
          name: fullPath
          schema:
            type: string
          required: true
          description: Full file path
        - in: query
          name: isDir
          schema:
            type: boolean
          required: true
          description: Is this file or directory
        - in: query
          name: type
          schema:
            $ref: '#/components/schemas/UploadType'
          required: true
          description: In case of file duplication replace or rename
        - in: query
          name: sha256HashBase64
          schema:
            type: string
          required: false
        - in: query
          name: contentLength
          schema:
            type: integer
            format: int64
          required: false
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationFile'
      security:
        - TokenAuth: [ ]
      operationId: uploadFile
      tags: [ file ]

  /api/files/download-link/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
    get:
      summary: Get download link for publication file
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                type: string
      security:
        - TokenAuth: [ ]
      operationId: getDownloadLinkForPublicationFile
      tags: [ file ]

  /api/author/{searchText}:
    get:
      summary: Get users by search text
      parameters:
        - in: path
          name: searchText
          schema:
            type: string
          required: true
          description: Search text for users
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserInfo'
      security:
        - TokenAuth: [ ]
      operationId: getAuthors
      tags: [ author ]

  /api/author/top:
    get:
      summary: Get top authors
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
          description: Page number
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
          description: Page size
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopAuthorsResponse'
      security:
        - PublicAuth: [ ]
      operationId: getTopAuthors
      tags: [ author ]

  /api/files/size:
    parameters:
      - in: query
        name: publicationId
        schema:
          type: string
          maxLength: 7
        required: true
        description: Publication id
    get:
      summary: Get files size by publication id
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                format: int64
      security:
        - TokenAuth: [ ]
      operationId: getPublicationFilesSize
      tags: [ file ]

  /api/files:
    parameters:
      - in: query
        name: publicationId
        schema:
          type: string
          maxLength: 7
        required: true
        description: Publication id
    get:
      summary: Get files by Publication id
      parameters:
        - in: query
          name: dirPath
          schema:
            type: string
          required: true
          description: Directory path
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PublicationFile'
      security:
        - TokenAuth: [ ]
      operationId: getPublicationFiles
      tags: [ file ]
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFolderRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationFile'
      security:
        - TokenAuth: [ ]
      operationId: createFolder
      tags: [ file ]

  /api/files/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
        description: Id of file or directory
    put:
      summary: Patch file
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditFileRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: editFile
      tags: [ file ]

  /api/files/deleteByIds:
    delete:
      summary: Delete file by id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteByIdsRequest'
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: deleteFiles
      tags: [ file ]

  /api/files/move/{id}:
    post:
      summary: Move file by id
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: Id of file or directory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveFileRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: moveFile
      tags: [ file ]

  /api/sample-files/size:
    parameters:
      - in: query
        name: publicationId
        schema:
          type: string
          maxLength: 7
        required: true
        description: Publication id
    get:
      summary: Get sample files size by publication id
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                format: int64
      security:
        - TokenAuth: [ ]
      operationId: getPublicationSampleFilesSize
      tags: [ sampleFile ]

  /api/sample-files:
    parameters:
      - in: query
        name: publicationId
        schema:
          type: string
          maxLength: 7
        required: true
        description: Publication id
    get:
      summary: Get sample files by publication id
      parameters:
        - in: query
          name: dirPath
          schema:
            type: string
          required: true
          description: Directory path
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PublicationFile'
      security:
        - TokenAuth: [ ]
      operationId: getPublicationSampleFiles
      tags: [ sampleFile ]
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFolderRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationFile'
      security:
        - TokenAuth: [ ]
      operationId: createFolderForSampleFile
      tags: [ sampleFile ]


  /api/sample-files/check-duplicates/{publicationId}:
    post:
      summary: Check file duplicates
      parameters:
        - in: path
          name: publicationId
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckFileDuplicatesRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckFileDuplicatesResponse'
      security:
        - TokenAuth: [ ]
      operationId: checkSampleFileDuplicates
      tags: [ sampleFile ]

  /api/sample-files/upload:
    post:
      summary: Upload sample file
      parameters:
        - in: query
          name: publicationId
          schema:
            type: string
            maxLength: 7
          required: true
          description: Publication id
        - in: query
          name: fullPath
          schema:
            type: string
          required: true
          description: Full file path
        - in: query
          name: isDir
          schema:
            type: boolean
          required: true
          description: Is this file or directory
        - in: query
          name: type
          schema:
            $ref: '#/components/schemas/UploadType'
          required: true
          description: In case of file duplication replace or rename
        - in: query
          name: sha256HashBase64
          schema:
            type: string
          required: false
        - in: query
          name: contentLength
          schema:
            type: integer
            format: int64
          required: false
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationFile'
      security:
        - TokenAuth: [ ]
      operationId: uploadSampleFile
      tags: [ sampleFile ]

  /api/sample-files/download-link/{file_id}:
    get:
      summary: Download a sample file
      description: Retrieves a sample file for download link
      parameters:
        - name: file_id
          in: path
          description: ID of the sample file to download
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                type: string
      security:
        - TokenAuth: [ ]
      operationId: getPublicationSampleFileDownloadLink
      tags: [ sampleFile ]

  /api/sample-files/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
        description: Id of sample file or directory
    put:
      summary: Patch file
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditFileRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: editSampleFile
      tags: [ sampleFile ]

  /api/sample-files/deleteByIds:
    delete:
      summary: Delete sample file by id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteByIdsRequest'
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: deleteSampleFiles
      tags: [ sampleFile ]

  /api/sample-files/move/{id}:
    post:
      summary: Move sample file by id
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: Id of sample file or directory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveFileRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: moveSampleFile
      tags: [ sampleFile ]

  /api/organizations/search:
    get:
      summary: Search organizations
      parameters:
        - in: query
          name: text
          schema:
            type: string
            minLength: 3
          required: true
          description: Name or part of organization name
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchOrganizationsResponse'
      security:
        - PublicAuth: [ ]
      operationId: searchOrganizations
      tags: [ organization ]

  /api/organization/{id}:
    get:
      summary: Search organizations
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
          required: true
          description: Organization id
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
      security:
        - PublicAuth: [ ]
      operationId: getOrganization
      tags: [ organization ]

  /api/subscribe:
    post:
      summary: Save visitor
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
        required: true
      responses:
        200:
          description: Success
      security:
        - PublicAuth: [ ]
      operationId: subscribe
      tags: [ subscription ]

  /api/link/{alias}:
    get:
      summary: Get link by alias
      parameters:
        - in: path
          name: alias
          schema:
            type: string
          required: true
          description: Link alias
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkMapping'
      security:
        - PublicAuth: [ ]
      operationId: getLinkByAlias
      tags: [ linkMapping ]

components:
  schemas:
    PublicationFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
        publicationId:
          type: string
        fullPath:
          type: string
        description:
          type: string
        dirPath:
          type: string
        isDir:
          type: boolean
        hash:
          type: string
        size:
          type: integer
          format: int64
        creationTime:
          type: string
          format: date-time

    CheckFileDuplicatesRequest:
      type: object
      properties:
        fullPathList:
          type: array
          items:
            type: string
      required:
        - fullPathList

    CheckFileDuplicatesResponse:
      type: object
      additionalProperties:
        type: boolean

    EditFileRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          maxLength: 4096
      required:
        - name

    DeleteByIdsRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
            format: uuid
      required:
        - ids

    MoveFileRequest:
      type: object
      properties:
        newDirPath:
          type: string
          minLength: 0
      required:
        - newDirPath

    CreateFolderRequest:
      type: object
      properties:
        dirPath:
          type: string
        name:
          type: string
        description:
          type: string
      required:
        - dirPath
        - name

    CreateReportRequest:
      type: object
      properties:
        email:
          type: string
        description:
          type: string
          maxLength: 4096
        fileIds:
          type: array
          items:
            type: string
        publicationId:
          type: string
      required:
        - email
        - description
        - fileIds
        - publicationId

    SubmitRegistrationRequest:
      type: object
      properties:
        registrationToken:
          type: string
          format: uuid
        code:
          type: string
      required:
        - registrationToken
        - code

    RegistrationRequest:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
          minLength: 8
        utmSource:
          type: string
        initialReferrer:
          type: string
      required:
        - email
        - password
        - firstName
        - lastName

    RegistrationResponse:
      type: object
      properties:
        registrationToken:
          type: string
          format: uuid
      required:
        - registrationToken

    PasswordChangeRequest:
      type: object
      properties:
        newPassword:
          type: string
          minLength: 8
        previousPassword:
          type: string
          minLength: 8
      required:
        - newPassword
        - previousPassword

    SetPasswordRequest:
      type: object
      properties:
        newPassword:
          type: string
          minLength: 8
      required:
        - newPassword

    PasswordResetRequest:
      type: object
      properties:
        password:
          type: string
          minLength: 8
        passwordResetRequestId:
          type: string
          format: uuid
      required:
        - password
        - code

    RequestPasswordResetRequest:
      type: object
      properties:
        email:
          type: string
      required:
        - email

    SendPasswordResetLinkRequest:
      type: object
      properties:
        email:
          type: string
      required:
        - email

    AuthorizeRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          minLength: 8
      required:
        - email
        - password

    AuthorizeOauthRequest:
      type: object
      properties:
        code:
          type: string
          maxLength: 2048
        type:
          $ref: '#/components/schemas/OauthType'
        utmSource:
          type: string
        initialReferrer:
          type: string
      required:
        - code
        - type

    AuthorizeResponse:
      type: object
      properties:
        token:
          type: string

    AuthorizationLinksResponse:
      type: object
      properties:
        google:
          type: string
          maxLength: 2048
        facebook:
          type: string
          maxLength: 2048
        linkedin:
          type: string
          maxLength: 2048
        orcid:
          type: string
          maxLength: 2048

    ChangeEmailRequest:
      type: object
      properties:
        email:
          type: string
      required:
        - email

    ChangeEmailResponse:
      type: object
      properties:
        confirmationToken:
          type: string
          format: uuid
      required:
        - confirmationToken

    ChangeEmailConfirmationRequest:
      type: object
      properties:
        confirmationToken:
          type: string
          format: uuid
        code:
          type: string
      required:
        - confirmationToken
        - code

    CreatePublicationRequest:
      type: object
      properties:
        dataCollectionType:
          $ref: '#/components/schemas/DataCollectionType'
      required:
        - dataCollectionType

    CreatePublicationResponse:
      type: object
      properties:
        id:
          type: string
          maxLength: 7
        status:
          $ref: '#/components/schemas/PublicationStatus'
        contentStatus:
          $ref: '#/components/schemas/PublicationContentStatus'
        creationTime:
          type: string
          format: date-time
        publicationTime:
          type: string
          format: date-time
      required:
        - id
        - status
        - creationTime

    SubmitPublicationRequest:
      type: object
      properties:
        accessType:
          $ref: '#/components/schemas/AccessType'
        useType:
          $ref: '#/components/schemas/UseType'
        storageType:
          $ref: '#/components/schemas/StorageType'
        licenseType:
          $ref: '#/components/schemas/LicenseType'
        previewTitle:
          type: string
          maxLength: 200
        previewSubtitle:
          type: string
          maxLength: 300
        isPeerReviewEnabled:
          type: boolean
        reviewers:
          items:
            $ref: '#/components/schemas/Reviewer'
          maxLength: 5
      required:
        - accessType
        - storageType

    GetMeResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        username:
          type: string
        email:
          type: string
        canSetPassword:
          type: boolean
        canChangePassword:
          type: boolean
        profileImage:
          type: string
          format: byte
        signedVia:
          type: array
          items:
            $ref: '#/components/schemas/OauthType'
        workplaces:
          type: array
          items:
            $ref: '#/components/schemas/Workplace'
        isNameConfirmed:
          type: boolean
        isWorkplacesConfirmed:
          type: boolean
      required:
        - id
        - firstName
        - lastName
        - username
        - email
        - canSetPassword
        - canChangePassword
        - workplaces
        - isNameConfirmed

    ReportFile:
      type: object
      properties:
        id:
          type: string
          format: uuid

    AcademicSupervisorLetter:
      type: object
      properties:
        id:
          type: string
          format: uuid
        fileName:
          type: string
          maxLength: 255
        contentLength:
          type: integer
          format: int64
          description: Content length
        academicSupervisorName:
          type: string
          maxLength: 255
      required:
        - id
        - fileName
        - contentLength
        - academicSupervisorName

    UserInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        email:
          type: string
        username:
          type: string
        profileImage:
          type: string
          format: byte
        workplaces:
          type: array
          items:
            $ref: '#/components/schemas/Workplace'
      required:
        - id
        - firstName
        - lastName
        - email
        - username
        - workplaces

    FullName:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string

    UploadType:
      type: string
      enum:
        - REPLACE
        - RENAME

    OauthType:
      type: string
      enum:
        - GOOGLE
        - FACEBOOK
        - LINKEDIN
        - ORCID

    PublicationStatus:
      type: string
      enum:
        - PENDING
        - READY_FOR_PUBLICATION
        - MODERATION
        - PUBLISHED

    UseType:
      type: string
      enum:
        - CITATE
        - CO_AUTHORSHIP

    StorageType:
      type: string
      enum:
        - CLOUD_SECURE_STORAGE
        - IPFS

    PublicationContentStatus:
      type: string
      enum:
        - AVAILABLE
        - PREPARING

    AccessType:
      type: string
      enum:
        - OPEN
        - PERSONAL_SHARE

    LicenseType:
      type: string
      enum:
        - ATTRIBUTION_NO_DERIVATIVES
        - ATTRIBUTION_NO_DERIVATIVES_NON_COMMERCIAL
        - DUMMY

    DataCollectionType:
      type: string
      enum:
        - GENERAL
        - AGING
        - STUDENT

    AcademicLevel:
      type: string
      enum:
        - UNDERGRADUATE_STUDENT
        - GRADUATE_STUDENT
        - PHD_STUDENT

    UserUpdateRequest:
      type: object
      properties:
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        username:
          type: string
        profileImage:
          type: string
          format: byte
          maxLength: 2097152
        deleteProfileImage:
          type: boolean
        workplaces:
          type: array
          items:
            $ref: '#/components/schemas/Workplace'
        confirmName:
          type: boolean
        confirmWorkplaces:
          type: boolean
      required:
        - firstName
        - lastName
        - username
        - workplaces

    Workplace:
      type: object
      properties:
        id:
          type: string
          format: uuid
        organization:
          $ref: '#/components/schemas/Organization'
        department:
          type: string
        address:
          type: string
        postalCode:
          type: string
        creationTime:
          type: string
          format: date-time

    PublicationEditRequest:
      type: object
      properties:
        authors:
          $ref: '#/components/schemas/Authors'
        title:
          $ref: '#/components/schemas/PublicationStringValue'
        academicLevel:
          $ref: '#/components/schemas/AcademicLevel'
        researchAreas:
          $ref: '#/components/schemas/PublicationStringArrayValue'
        description:
          $ref: '#/components/schemas/PublicationStringValue'
        grantOrganizations:
          $ref: '#/components/schemas/PublicationStringArrayValue'
        primaryArticles:
          $ref: '#/components/schemas/PublicationStringArrayValue'
        relatedArticles:
          $ref: '#/components/schemas/PublicationStringArrayValue'
        tags:
          $ref: '#/components/schemas/PublicationStringArrayValue'
        dataDescription:
          $ref: '#/components/schemas/PublicationStringValue'
        preliminaryResults:
          $ref: '#/components/schemas/PublicationStringValue'
        software:
          $ref: '#/components/schemas/PublicationStringValue'
        methodTitle:
          $ref: '#/components/schemas/PublicationStringValue'
        methodDescription:
          $ref: '#/components/schemas/PublicationStringValue'
        predictedGoals:
          $ref: '#/components/schemas/PublicationStringValue'
        isNegative:
          type: boolean
        negativeData:
          $ref: '#/components/schemas/PublicationStringValue'
        isReplicationOfPreviousExperiments:
          type: boolean
        replicationOfPreviousExperimentsData:
          $ref: '#/components/schemas/PublicationStringValue'
        isPreviouslyPublishedDataset:
          type: boolean
        previouslyPublishedDatasetData:
          $ref: '#/components/schemas/PublicationStringValue'
        licenseType:
          $ref: '#/components/schemas/PublicationLicenseTypeValue'
        dataCollectionType:
          $ref: '#/components/schemas/PublicationDataCollectionTypeValue'
        characterCount:
          type: number

    PublicationStringValue:
      type: object
      properties:
        edited:
          type: boolean
        value:
          type: string
          maxLength: 32768

    PublicationLicenseTypeValue:
      type: object
      properties:
        edited:
          type: boolean
        value:
          $ref: '#/components/schemas/LicenseType'

    PublicationDataCollectionTypeValue:
      type: object
      properties:
        edited:
          type: boolean
        value:
          $ref: '#/components/schemas/DataCollectionType'

    PublicationStringArrayValue:
      type: object
      properties:
        edited:
          type: boolean
        values:
          type: array
          items:
            $ref: '#/components/schemas/Paragraph'

    Paragraph:
      type: object
      properties:
        text:
          type: string
          maxLength: 32768
      required:
        - text

    Authors:
      type: object
      properties:
        edited:
          type: boolean
        values:
          type: array
          items:
            $ref: '#/components/schemas/Author'

    Author:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        ordinal:
          type: integer
          format: int32
        isConfirmed:
          type: boolean
        user:
          $ref: '#/components/schemas/UserInfo'
        workplaces:
          type: array
          items:
            $ref: '#/components/schemas/Workplace'
      required:
        - email
        - firstName
        - lastName
        - isConfirmed

    Reviewer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      required:
        - email
        - firstName
        - lastName

    Downloader:
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - email
        - firstName
        - lastName

    Organization:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      required:
        - name

    SearchOrganizationsResponse:
      type: object
      properties:
        organizations:
          type: array
          items:
            $ref: "#/components/schemas/Organization"
      required:
        - organizations

    SearchPublicationsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Publication"
        pageNum:
          type: integer
        isLast:
          type: boolean
      required:
        - pageNum
        - isLast

    Publication:
      type: object
      properties:
        id:
          type: string
        creator:
          $ref: '#/components/schemas/UserInfo'
        status:
          $ref: '#/components/schemas/PublicationStatus'
        accessType:
          $ref: '#/components/schemas/AccessType'
        licenseType:
          $ref: '#/components/schemas/LicenseType'
        useType:
          $ref: '#/components/schemas/UseType'
        dataCollectionType:
          $ref: '#/components/schemas/DataCollectionType'
        storageType:
          $ref: '#/components/schemas/StorageType'
        creationTime:
          type: string
          format: date-time
        editingTime:
          type: string
          format: date-time
        publicationTime:
          type: string
          format: date-time
        title:
          type: string
          maxLength: 32768
        previewTitle:
          type: string
          maxLength: 200
        previewSubtitle:
          type: string
          maxLength: 300
        description:
          type: string
          maxLength: 32768
        doiLink:
          type: string
          maxLength: 300
        academicLevel:
          $ref: '#/components/schemas/AcademicLevel'
        researchAreas:
          $ref: '#/components/schemas/StringArray'
        grantOrganizations:
          $ref: '#/components/schemas/StringArray'
        primaryArticles:
          $ref: '#/components/schemas/StringArray'
        relatedArticles:
          $ref: '#/components/schemas/StringArray'
        tags:
          $ref: '#/components/schemas/StringArray'
        dataDescription:
          type: string
          maxLength: 32768
        preliminaryResults:
          type: string
          maxLength: 32768
        software:
          type: string
          maxLength: 32768
        methodTitle:
          type: string
          maxLength: 32768
        methodDescription:
          type: string
          maxLength: 32768
        predictedGoals:
          type: string
          maxLength: 32768
        authors:
          type: array
          items:
            $ref: '#/components/schemas/Author'
        negativeData:
          type: string
          maxLength: 32768
        isNegative:
          type: boolean
        isReplicationOfPreviousExperiments:
          type: boolean
        replicationOfPreviousExperimentsData:
          type: string
          maxLength: 32768
        isPreviouslyPublishedDataset:
          type: boolean
        previouslyPublishedDatasetData:
          type: string
          maxLength: 32768
        viewsCount:
          type: integer
          format: int64
        downloadsCount:
          type: integer
          format: int64
        total:
          type: number
          format: integer
        archiveSize:
          type: integer
          format: int64
        sampleArchiveSize:
          type: integer
          format: int64
      required:
        - id
        - status
        - creator
        - isNegative
        - isReplicationOfPreviousExperiments
        - isPreviouslyPublishedDataset
        - creationTime
        - editingTime
        - total

    PublicationsResponse:
      type: object
      properties:
        isLastPage:
          type: boolean
        publications:
          type: array
          items:
            $ref: '#/components/schemas/Publication'
      required:
        - isLastPage

    TopAuthorsResponse:
      type: object
      properties:
        isLastPage:
          type: boolean
        authors:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'

    GetDownloadersResponse:
      type: object
      properties:
        isLastPage:
          type: boolean
        downloaders:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
      required:
        - downloaders
        - isLastPage

    StringArray:
      type: array
      items:
        $ref: '#/components/schemas/Paragraph'

    DownloadTokenResponse:
      type: object
      properties:
        token:
          type: string
      required:
        - token

    DownloadLinkResponse:
      type: object
      properties:
        link:
          type: string
        passcode:
          type: string
        contentStatus:
          $ref: '#/components/schemas/PublicationContentStatus'
      required:
        - link
        - passcode
        - contentStatus

    LinkMapping:
      type: object
      properties:
        url:
          type: string
        description:
          type: string
        eventTime:
          type: string
          format: date-time
      required:
        - url

  securitySchemes:
    PublicAuth:
      description: Public access
      type: http
      scheme: mutual

    TokenAuth:
      description: Access with auth JWT token
      type: http
      scheme: bearer

    BasicAuth:
      description: Basic auth credentials for admin methods
      type: http
      scheme: basic
