openapi: 3.0.1
info:
  title: FA server API
  description: 'FA server API'
  version: 1.0.0
servers:
  - url: http://{host}

paths:
  /api/authorize:
    post:
      summary: Authorize using email password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeResponse'
      security:
        - PublicAuth: [ ]
      operationId: authorize
      tags: [ auth ]

  /api/oauth-authorization-links:
    get:
      summary: Authorization oauth links
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationLinksResponse'
      security:
        - PublicAuth: [ ]
      operationId: authorizationLinks
      tags: [ auth ]

  /api/authorize-oauth:
    post:
      summary: Authorize via oauth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeOauthRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeResponse'
      security:
        - PublicAuth: [ ]
      operationId: authorizeOauth
      tags: [ auth ]

  /api/registration/start:
    post:
      summary: Start registration with email password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
      security:
        - PublicAuth: [ ]
      operationId: startRegistration
      tags: [ registration ]

  /api/register/confirm:
    post:
      summary: Confirm registration with email password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitRegistrationRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeResponse'
      security:
        - PublicAuth: [ ]
      operationId: confirmRegistration
      tags: [ registration ]

  /api/user/change-email:
    post:
      summary: Change email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeEmailResponse'
      security:
        - TokenAuth: [ ]
      operationId: changeEmail
      tags: [ user ]

  /api/user/change-email-confirmation:
    post:
      summary: Confirm change email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailConfirmationRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - PublicAuth: [ ]
      operationId: confirmChangeEmail
      tags: [ user ]

  /api/user/request-password-reset:
    post:
      summary: Request password reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPasswordResetRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - PublicAuth: [ ]
      operationId: requestPasswordReset
      tags: [ user ]

  /api/user/reset-password:
    post:
      summary: Reset password with reset id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeResponse'
      security:
        - PublicAuth: [ ]
      operationId: resetPassword
      tags: [ user ]

  /api/user/change-password:
    post:
      summary: Change password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: changePassword
      tags: [ user ]

  /api/user/set-password:
    post:
      summary: Set password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: setPassword
      tags: [ user ]

  /api/user/get-me:
    get:
      summary: Get user information
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMeResponse'
      security:
        - TokenAuth: [ ]
      operationId: getMe
      tags: [ user ]

  /api/publication:
    post:
      summary: Create publication draft
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
      security:
        - TokenAuth: [ ]
      operationId: createPublication
      tags: [ publication ]

  /api/files/upload:
    post:
      summary: Upload file
      parameters:
        - in: query
          name: publicationId
          schema:
            type: string
            format: uuid
          required: true
          description: Publication id
        - in: query
          name: fullPath
          schema:
            type: string
          required: true
          description: Full file path
        - in: query
          name: isDir
          schema:
            type: boolean
          required: true
          description: Is this file or directory
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: false
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: uploadFile
      tags: [ file ]

  /api/files:
    parameters:
      - in: query
        name: publicationId
        schema:
          type: string
          format: uuid
        required: true
        description: Publication id
    get:
      summary: Get files by publication id
      parameters:
        - in: query
          name: dirPath
          schema:
            type: string
          required: true
          description: Directory path
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PublicationFile'
      security:
        - TokenAuth: [ ]
      operationId: getPublicationFiles
      tags: [ file ]
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFolderRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: createFolder
      tags: [ file ]

  /api/files/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
        description: Id of file or directory
    put:
      summary: Patch file
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditFileRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: editFile
      tags: [ file ]

  /api/files/deleteByIds:
    delete:
      summary: Delete file by id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteByIdsRequest'
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: deleteFiles
      tags: [ file ]

  /api/files/move/{id}:
    post:
      summary: Move file by id
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
          description: Id of file or directory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveFileRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: moveFile
      tags: [ file ]

components:
  schemas:
    PublicationFile:
      type: object
      properties:
        id:
          type: string
          format: uuid
        publicationId:
          type: string
          format: uuid
        fullPath:
          type: string
        description:
          type: string
        dirPath:
          type: string
        isDir:
          type: boolean
        creationTime:
          type: string
          format: date-time

    EditFileRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name

    DeleteByIdsRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
            format: uuid
      required:
        - ids

    MoveFileRequest:
      type: object
      properties:
        newDirPath:
          type: string
          minLength: 0
      required:
        - newDirPath

    CreateFolderRequest:
      type: object
      properties:
        dirPath:
          type: string
        name:
          type: string
        description:
          type: string
      required:
        - dirPath
        - name

    SubmitRegistrationRequest:
      type: object
      properties:
        registrationToken:
          type: string
          format: uuid
        code:
          type: string
      required:
        - registrationToken
        - code

    RegistrationRequest:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
          minLength: 8
      required:
        - email
        - password

    RegistrationResponse:
      type: object
      properties:
        registrationToken:
          type: string
          format: uuid
      required:
        - registrationToken

    PasswordChangeRequest:
      type: object
      properties:
        newPassword:
          type: string
          minLength: 8
        previousPassword:
          type: string
          minLength: 8
      required:
        - newPassword
        - previousPassword

    SetPasswordRequest:
      type: object
      properties:
        newPassword:
          type: string
          minLength: 8
      required:
        - newPassword

    PasswordResetRequest:
      type: object
      properties:
        password:
          type: string
          minLength: 8
        passwordResetRequestId:
          type: string
          format: uuid
      required:
        - password
        - code

    RequestPasswordResetRequest:
      type: object
      properties:
        email:
          type: string
      required:
        - email

    SendPasswordResetLinkRequest:
      type: object
      properties:
        email:
          type: string
      required:
        - email

    AuthorizeRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          minLength: 8
      required:
        - email
        - password

    AuthorizeOauthRequest:
      type: object
      properties:
        code:
          type: string
          maxLength: 2048
        type:
          $ref: '#/components/schemas/OauthType'
      required:
        - code
        - type

    AuthorizeResponse:
      type: object
      properties:
        token:
          type: string

    AuthorizationLinksResponse:
      type: object
      properties:
        google:
          type: string
          maxLength: 2048
        facebook:
          type: string
          maxLength: 2048
        linkedin:
          type: string
          maxLength: 2048
        orcid:
            type: string
            maxLength: 2048

    ChangeEmailRequest:
      type: object
      properties:
        email:
          type: string
      required:
        - email

    ChangeEmailResponse:
      type: object
      properties:
        confirmationToken:
          type: string
          format: uuid
      required:
        - confirmationToken

    ChangeEmailConfirmationRequest:
      type: object
      properties:
        confirmationToken:
          type: string
          format: uuid
        code:
          type: string
      required:
        - confirmationToken
        - code

    Publication:
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id

    GetMeResponse:
      type: object
      properties:
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        username:
          type: string
        email:
          type: string
        canSetPassword:
          type: boolean
        canChangePassword:
          type: boolean
        signedVia:
          type: array
          items:
            $ref: '#/components/schemas/OauthType'

    OauthType:
      type: string
      enum:
        - GOOGLE
        - FACEBOOK
        - LINKEDIN
        - ORCID

  securitySchemes:
    PublicAuth:
      description: Public access
      type: http
      scheme: mutual

    TokenAuth:
      description: Access with auth JWT token
      type: http
      scheme: bearer
