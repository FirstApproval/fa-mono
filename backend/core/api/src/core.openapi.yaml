openapi: 3.0.1
info:
  title: FA server API
  description: 'FA server API'
  version: 1.0.0
servers:
  - url: http://localhost:8080

paths:
  /api/authorize-oauth:
    post:
      summary: Authorize via oauth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeOauthRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeResponse'
      security:
        - PublicAuth: [ ]
      operationId: authorizeOauth
      tags: [ auth ]

  /api/registration/start:
    post:
      summary: Start registration with email password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
      security:
        - PublicAuth: [ ]
      operationId: startRegistration
      tags: [ auth ]

  /api/register/confirm:
    post:
      summary: Confirm registration with email password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitRegistrationRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeResponse'
      security:
        - PublicAuth: [ ]
      operationId: confirmRegistration
      tags: [ auth ]

  /api/send-password-reset-link:
    post:
      summary: Send password reset link
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendPasswordResetLinkRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - PublicAuth: [ ]
      operationId: sendPasswordResetLink
      tags: [ auth ]

  /api/request-password-reset:
    post:
      summary: Request password reset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPasswordResetRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - PublicAuth: [ ]
      operationId: requestPasswordReset
      tags: [ user ]

  /api/reset-password:
    post:
      summary: Reset password with reset id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeResponse'
      security:
        - PublicAuth: [ ]
      operationId: resetPassword
      tags: [ user ]

  /api/change-password:
    post:
      summary: Change password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: changePassword
      tags: [ user ]

  /api/set-password:
    post:
      summary: Change password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordRequest'
        required: true
      responses:
        200:
          description: Success
      security:
        - TokenAuth: [ ]
      operationId: setPassword
      tags: [ user ]

  /api/authorize:
    post:
      summary: Authorize using email password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeResponse'
      security:
        - PublicAuth: [ ]
      operationId: authorize
      tags: [ auth ]

components:
  schemas:
    SubmitRegistrationRequest:
      type: object
      properties:
        registrationToken:
          type: string
          format: uuid
        code:
          type: string
      required:
        - registrationToken
        - code

    RegistrationRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    RegistrationResponse:
      type: object
      properties:
        registrationToken:
          type: string
          format: uuid
      required:
        - registrationToken

    PasswordChangeRequest:
      type: object
      properties:
        newPassword:
          type: string
          minLength: 6
        previousPassword:
          type: string
          minLength: 6
      required:
        - newPassword
        - previousPassword

    SetPasswordRequest:
      type: object
      properties:
        newPassword:
          type: string
          minLength: 6
      required:
        - newPassword

    PasswordResetRequest:
      type: object
      properties:
        password:
          type: string
          minLength: 6
        passwordResetRequestId:
          type: string
          format: uuid
      required:
        - password
        - code

    RequestPasswordResetRequest:
      type: object
      properties:
        email:
          type: string
      required:
        - email

    SendPasswordResetLinkRequest:
      type: object
      properties:
        email:
          type: string
      required:
        - email

    AuthorizeRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    AuthorizeOauthRequest:
      type: object
      properties:
        code:
          type: string
          maxLength: 1024
        type:
          $ref: '#/components/schemas/OauthType'
      required:
        - code
        - type

    AuthorizeResponse:
      type: object
      properties:
        token:
          type: string
      required:
        - token

    OauthType:
      type: string
      enum:
        - GOOGLE
        - ORCID

  securitySchemes:
    PublicAuth:
      description: Public access
      type: http
      scheme: mutual

    TokenAuth:
      description: Access with auth JWT token
      type: http
      scheme: bearer
