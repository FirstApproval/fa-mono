name: CI/CD DEV. Build, Push to GHCR and deploy
on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment (dev or prod)'
        required: true
        default: 'dev'
jobs:
  build-and-push:
    name: Build, Push to GHCR and deploy
    runs-on: ubuntu-latest
    strategy:
      matrix: { dir: [ 'backend', 'frontend' ] }
    steps:
      - name: Set Environment Variables
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "dev" ]]; then
            echo "DOCKERFILE=Dockerfile-dev-github" >> $GITHUB_ENV
            echo "SERVER=dev.firstapproval.io" >> $GITHUB_ENV
          elif [[ "${{ github.event.inputs.environment }}" == "prod" ]]; then
            echo "DOCKERFILE=Dockerfile-prod-github" >> $GITHUB_ENV
            echo "SERVER=firstapproval.io" >> $GITHUB_ENV
          else
            echo "Error: Invalid environment. Must be 'dev' or 'prod'."
            exit 1
          fi  

      - name: Check out code
        uses: actions/checkout@v3

      - name: Copy file
        run: |
          cp backend/core/api/src/core.openapi.yaml frontend/core.openapi.yaml
        if: ${{ matrix.dir == 'frontend' }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_ACTOR }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build Docker image
        run: |
          docker buildx build --platform linux/amd64 -f $DOCKERFILE -t ghcr.io/firstapproval/fa-mono-${{ matrix.dir }} . && docker push ghcr.io/firstapproval/fa-mono-${{ matrix.dir }}
        working-directory: ${{ matrix.dir }}

      - name: Set up SSH key
        env:
          SSH_PRIVATE_KEY: ${{ github.event.inputs.environment == 'dev' && secrets.DEV_SERVER_SSH_PRIVATE_KEY || secrets.PROD_SERVER_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-agent bash -c 'echo "SSH agent started" && ssh-add ~/.ssh/id_rsa'
          ssh-keyscan dev.firstapproval.io >> ~/.ssh/known_hosts  

      - name: Pull image
        run: |
          echo "Pulling the backend image..."
          ssh ubuntu@dev.firstapproval.io "docker compose pull $matrix_dir"
        env:
          matrix_dir: ${{ matrix.dir }}

      - name: Deploy image
        run: |
          echo "Deploying the ${{ matrix.dir }} image..."
          ssh ubuntu@$SERVER "docker compose up -d $matrix_dir --force-recreate"
        env:
          matrix_dir: ${{ matrix.dir }}
